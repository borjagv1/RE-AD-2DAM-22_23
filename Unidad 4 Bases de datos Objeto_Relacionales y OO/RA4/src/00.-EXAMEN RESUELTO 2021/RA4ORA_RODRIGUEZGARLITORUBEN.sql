DROP TABLE TABLA_TIP_RESERVAS;
DROP TABLE TABLA_TIP_CLIENTES;
DROP TABLE TABLA_TIP_HABITACIONES;
DROP TABLE TABLA_TIP_TIPOSHABITACIONES;

DROP TYPE TIP_RESERVAS;
DROP TYPE TIP_CLIENTES;
DROP TYPE TIP_HABITACIONES;
DROP TYPE RES_TRIM;

---------------
---------------
--CREAR TIPOS--
---------------
---------------
CREATE OR REPLACE TYPE TRIMESTRE AS OBJECT(
    NUM_RESERVAS NUMBER(3),
    TOT_IMPORTE NUMBER(7,2)
);
/

CREATE TYPE RES_TRIM AS VARRAY(4) OF TRIMESTRE;
/

CREATE TYPE TIP_CLIENTES AS OBJECT(
    CODIGOCLIENTE NUMBER,
    NOMBRECLIENTE VARCHAR2(50),
    APELLIDO VARCHAR2(30),
    TELEFONO VARCHAR2(15),
    direccion varchar2(40),
    Ciudad varchar2(30),
    Region varchar2(30),
    Pais varchar2(30) ,
    CodigoPostal varchar2(10) ,
    LIMITECREDITO FLOAT,
    DATOS_TRIM RES_TRIM,
    MEMBER FUNCTION TOTAL_IMP_TRIMS RETURN FLOAT,
    MEMBER FUNCTION TOTAL_RES_TRIMS RETURN NUMBER,
    MEMBER FUNCTION DATOS_TRIMESTRE(NUM_TRIM NUMBER) RETURN TRIMESTRE,
    MEMBER FUNCTION MAX_RES_TRIM RETURN NUMBER,
    MEMBER FUNCTION MAX_IMP_TRIM RETURN FLOAT
);
/

CREATE OR REPLACE TYPE BODY TIP_CLIENTES AS
--
    MEMBER FUNCTION TOTAL_IMP_TRIMS RETURN FLOAT AS
        TOTAL FLOAT := 0;
        BEGIN
            FOR I IN 1.. DATOS_TRIM.COUNT LOOP
                TOTAL := TOTAL + DATOS_TRIM(I).TOT_IMPORTE;
            END LOOP;
            RETURN TOTAL;
        END;
--
    MEMBER FUNCTION TOTAL_RES_TRIMS RETURN NUMBER AS
        TOTAL NUMBER := 0;
        BEGIN
            FOR I IN 1.. DATOS_TRIM.COUNT LOOP
                TOTAL := TOTAL + DATOS_TRIM(I).NUM_RESERVAS;
            END LOOP;
            RETURN TOTAL;
        END;
--
    MEMBER FUNCTION DATOS_TRIMESTRE(NUM_TRIM NUMBER) RETURN TRIMESTRE AS
        BEGIN
            IF NUM_TRIM < 1 OR NUM_TRIM > 4 THEN
                RETURN NEW TRIMESTRE(-1, -1);
            ELSE
                RETURN DATOS_TRIM(NUM_TRIM);
            END IF;
        END;
--
    MEMBER FUNCTION MAX_RES_TRIM RETURN NUMBER AS
        TRIMESTRE NUMBER;
        MAXRESERVA NUMBER := -1;
        BEGIN
            FOR I IN 1..4 LOOP
                IF DATOS_TRIM(I).NUM_RESERVAS > MAXRESERVA THEN
                    MAXRESERVA := DATOS_TRIM(I).NUM_RESERVAS;
                    TRIMESTRE := I;
                END IF;
            END LOOP;
            RETURN TRIMESTRE;
        END;
--
    MEMBER FUNCTION MAX_IMP_TRIM RETURN FLOAT AS
        TRIMESTRE NUMBER;
        MAXIMPORTE NUMBER := -1;
        BEGIN
            FOR I IN 1..4 LOOP
                IF DATOS_TRIM(I).TOT_IMPORTE > MAXIMPORTE THEN
                    MAXIMPORTE := DATOS_TRIM(I).TOT_IMPORTE;
                    TRIMESTRE := I;
                END IF;
            END LOOP;
            RETURN TRIMESTRE;
        END;
--
END;
/

CREATE OR REPLACE TYPE TIP_TIPOSHABITACIONES AS OBJECT(
    TIPO VARCHAR2(30),
    DESCIPCION VARCHAR2(50),
    PRECIO FLOAT
);
/

CREATE TYPE TIP_HABITACIONES AS OBJECT(
    NUMHABITACION VARCHAR2(4),
    NOMBREHABITACION VARCHAR2(50),
    TIPO REF TIP_TIPOSHABITACIONES
);
/

CREATE TYPE TIP_RESERVAS AS OBJECT(
    CODRESERVA NUMBER,
    NUMHAB REF TIP_HABITACIONES,
    CODCLI REF TIP_CLIENTES,
    FECHAENTRADA DATE,
    FECHASALIDA DATE
);
/


----------------
----------------
--CREAR TABLAS--
----------------
----------------
CREATE TABLE TABLA_TIP_TIPOSHABITACIONES OF TIP_TIPOSHABITACIONES(
    TIPO PRIMARY KEY
);
INSERT INTO TABLA_TIP_TIPOSHABITACIONES
    SELECT * FROM TIPOSHABITACIONES;
    
    
    
CREATE TABLE TABLA_TIP_HABITACIONES OF TIP_HABITACIONES(
    NUMHABITACION PRIMARY KEY
);
INSERT INTO TABLA_TIP_HABITACIONES
    SELECT H.NUMHABITACION, H.NOMBREHABITACION, REF(T) FROM HABITACIONES H, TABLA_TIP_TIPOSHABITACIONES T
        WHERE H.TIPO = T.TIPO;
        
        
        
CREATE TABLE TABLA_TIP_CLIENTES OF TIP_CLIENTES(
    CODIGOCLIENTE PRIMARY KEY
);
INSERT INTO TABLA_TIP_CLIENTES
    SELECT C.CODIGOCLIENTE, C.NOMBRECLIENTE, C.APELLIDO, C.TELEFONO, C.DIRECCION, C.CIUDAD, C.REGION, C.PAIS, C.CODIGOPOSTAL, C.LIMITECREDITO,
        RES_TRIM() FROM CLIENTES C;
     
        
--LLENAR EL ARRAY DE TRIMESTRES DE CADA CLIENTE
CREATE OR REPLACE PROCEDURE LLENAR_TRIM IS
    CURSOR C1 IS SELECT CODIGOCLIENTE FROM CLIENTES;
    CURSOR C2(CODCLI NUMBER) IS SELECT C.CODIGOCLIENTE, TO_CHAR(R.FECHAENTRADA, 'q') TRIMESTRE, SUM(T.PRECIO) IMPORTE, 
        COUNT(R.CODRESERVA) RESERV FROM CLIENTES C, RESERVAS R, HABITACIONES H, TIPOSHABITACIONES T 
        WHERE R.CODIGOCLIENTE = C.CODIGOCLIENTE AND R.NUMHABITACION = H.NUMHABITACION AND
        H.TIPO = T.TIPO AND C.CODIGOCLIENTE = CODCLI GROUP BY C.CODIGOCLIENTE, TO_CHAR(R.FECHAENTRADA, 'q') 
        ORDER BY C.CODIGOCLIENTE, TO_CHAR(R.FECHAENTRADA, 'q');
    TRIMES TRIMESTRE;
    ARR_TRIMES RES_TRIM;
BEGIN
    FOR I IN C1 LOOP
        TRIMES := NEW TRIMESTRE(0, 0);
        ARR_TRIMES := NEW RES_TRIM(TRIMES, TRIMES, TRIMES, TRIMES); --INICIALIZAR A 0
        
        FOR J IN C2(I.CODIGOCLIENTE) LOOP
            ARR_TRIMES(J.TRIMESTRE) := TRIMESTRE(J.RESERV, J.IMPORTE);
        END LOOP;
        
        UPDATE TABLA_TIP_CLIENTES SET DATOS_TRIM = ARR_TRIMES WHERE CODIGOCLIENTE = I.CODIGOCLIENTE;
    END LOOP;
END;
/

BEGIN
    LLENAR_TRIM();
END;
/
--FIN DEL LLENADO DE TRIMESTRES


        
CREATE TABLE TABLA_TIP_RESERVAS OF TIP_RESERVAS(
    CODRESERVA PRIMARY KEY
);
INSERT INTO TABLA_TIP_RESERVAS
    SELECT R.CODRESERVA, REF(H), REF(C), R.FECHAENTRADA, R.FECHASALIDA FROM RESERVAS R, TABLA_TIP_CLIENTES C, TABLA_TIP_HABITACIONES H
        WHERE R.CODIGOCLIENTE = C.CODIGOCLIENTE AND R.NUMHABITACION = H.NUMHABITACION;
    
    
    
---------------
---------------
---CONSULTAS---
---------------
---------------
--1--
SELECT C.CODIGOCLIENTE, C.NOMBRECLIENTE, C.TOTAL_IMP_TRIMS() TOTAL, C.TOTAL_RES_TRIMS() NUMRESERVAS, 
    C.DATOS_TRIMESTRE(1).NUM_RESERVAS T1NUMRES, C.DATOS_TRIMESTRE(1).TOT_IMPORTE T1TOTAL,
    C.DATOS_TRIMESTRE(2).NUM_RESERVAS T2NUMRES, C.DATOS_TRIMESTRE(2).TOT_IMPORTE T2TOTAL,
    C.DATOS_TRIMESTRE(3).NUM_RESERVAS T3NUMRES, C.DATOS_TRIMESTRE(3).TOT_IMPORTE T3TOTAL,
    C.DATOS_TRIMESTRE(4).NUM_RESERVAS T4NUMRES, C.DATOS_TRIMESTRE(4).TOT_IMPORTE T4TOTAL,
    C.MAX_IMP_TRIM() TRIMMAXTOTAL, C.MAX_RES_TRIM() TRIMMAXRES FROM TABLA_TIP_CLIENTES C; 
--FIN 1--

--2--
SELECT C.NOMBRECLIENTE FROM TABLA_TIP_CLIENTES C WHERE C.TOTAL_RES_TRIMS() = (SELECT MAX(CLI.TOTAL_RES_TRIMS()) FROM TABLA_TIP_CLIENTES CLI);
--FIN 2--

--3--
SELECT C.NOMBRECLIENTE FROM TABLA_TIP_CLIENTES C WHERE C.TOTAL_IMP_TRIMS() = (SELECT MAX(CLI.TOTAL_IMP_TRIMS()) FROM TABLA_TIP_CLIENTES CLI);
--FIN 3--