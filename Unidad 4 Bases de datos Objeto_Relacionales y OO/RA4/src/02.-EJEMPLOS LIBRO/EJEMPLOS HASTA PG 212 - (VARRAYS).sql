CREATE TYPE TELEFONO AS VARRAY(3) OF VARCHAR2(9); 
/
DESC TELEFONO;

CREATE TABLE AGENDA 
(
  NOMBRE VARCHAR2(15),
  TELEF TELEFONO
);

DESC AGENDA;

--Insertamos varias filas:
SELECT * FROM AGENDA;

INSERT INTO AGENDA VALUES 
('MANUEL', 
   TELEFONO ('656008876', '927986655', '639883300')); 

INSERT INTO AGENDA (NOMBRE, TELEF) VALUES 
       ('MARTA', TELEFONO ('649500800'));
COMMIT;

SELECT * FROM AGENDA ;

-- INSERTAR LAS SIGUIENTES FILAS EJEMPLO DE CLASE PARA VER SITUACIONES:
INSERT INTO AGENDA (NOMBRE, TELEF) VALUES ('LUISA', TELEFONO (NULL, '888666555'));
INSERT INTO AGENDA (NOMBRE) VALUES ('ROSA');
INSERT INTO AGENDA VALUES ('SILVIA', TELEFONO());
-- INSERTAR LAS SIGUIENTES FILAS EJEMPLO DE CLASE PARA VER SITUACIONES:

SELECT * FROM AGENDA;

--MODIFICION
UPDATE AGENDA 
  SET TELEF =  TELEFONO ('777777777', 
                         '999999955')
WHERE NOMBRE = 'MARTA';

----------------------------------------------------
--RECORRER ELEMENTOS DEL ARRAY--
-- da error por los valores nulos que hemos insertado. Nos imprime los valores hasta el fallo del NULO. 
--COMPROBAMOS LOS NULOS PREGUNTANDO SI NO ES NULO CON UN IF
DECLARE 
  CURSOR C1 IS SELECT * FROM AGENDA;
  CAD VARCHAR2(50);
BEGIN
  FOR I IN C1 LOOP
  
  IF (I.TELEF IS NOT NULL) THEN -- este es el arreglo que hacemos
  
    DBMS_OUTPUT.PUT_LINE(I.NOMBRE ||
        ', N�mero de Tel�fonos: '||I.TELEF.COUNT);
    CAD:='*';
    
    --RECORREMOS EL VARRAY
    
    FOR J IN 1 .. I.TELEF.COUNT LOOP   
      CAD:=CAD ||I.TELEF(J)||'*';
    END LOOP;
    DBMS_OUTPUT.PUT_LINE(CAD);
    ELSE
    DBMS_OUTPUT.PUT_LINE(I.NOMBRE ||
        ', LA COLUMNA ES NULA: ');
    END IF;
  END LOOP;
END;
/
------------------------------
--CREAR PROCEDIMIENTO PARA INSERTAR DATOS EN LA AGENDA
-- EL PROCEDIMIENTO RECIBE EL NOMBRE Y EL ARRAY DE TELEFONOS.
CREATE OR REPLACE PROCEDURE INSERTAR_AGENDA 
  ( N VARCHAR2, T TELEFONO) AS
BEGIN
  INSERT INTO AGENDA VALUES (N, T);
END INSERTAR_AGENDA;
/
--USO DEL PROCEDIMIENTO
BEGIN
  INSERTAR_AGENDA('LUIS', TELEFONO('949009977'));
  INSERTAR_AGENDA('MIGUEL', TELEFONO('949004020',
    '678905400'));
  COMMIT;
END;
/
SELECT * FROM AGENDA;
--CREAR UNA FUNCION QUE RECIBA EL NOMBRE DE UNA PERSONA Y DEVUELVA UN VARRAY CON SUS TELEFONOS
CREATE OR REPLACE FUNCTION BUSCAR_TELEFONO (N VARCHAR2) 
  RETURN TELEFONO AS
  TEL TELEFONO := TELEFONO();
BEGIN
  SELECT TELEF INTO TEL FROM AGENDA WHERE NOMBRE = N;
  -- recorrer los telefonos del nombre dado y mostrar POR PANTALLA DBMS
  DBMS_OUTPUT.PUT_LINE('NOMBRE: ' || N);
  FOR I IN 1 .. TEL.COUNT LOOP
    DBMS_OUTPUT.PUT_LINE('TELEFONO: '||TEL(I));
  END LOOP;
  RETURN TEL;
END BUSCAR_TELEFONO;
/
 -- USO DE LA FUNCION
DECLARE
  TEL TELEFONO;
BEGIN
  TEL := BUSCAR_TELEFONO('LUIS');
  DBMS_OUTPUT.PUT_LINE('TELEFONO: '||TEL(1));
END;
/