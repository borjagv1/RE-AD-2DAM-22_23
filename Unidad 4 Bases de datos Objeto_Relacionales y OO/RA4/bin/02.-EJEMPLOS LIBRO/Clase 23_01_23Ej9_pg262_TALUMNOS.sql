--Ejercicio 9 de la pagina 262 del libro

create type V_NOTAS AS VARRAY(5) OF NUMBER(4,2);
/
CREATE TYPE T_TELEFONO AS VARRAY(2) OF NUMBER;
/
create or replace NONEDITIONABLE TYPE T_DIRECCION AS OBJECT
(
  CALLE  VARCHAR2(50),
  CIUDAD VARCHAR2(50),
  CODIGO_POST NUMBER(5)
  );
  /
  
 CREATE TYPE TIP_CURSOS AS OBJECT
   (	ID_CURSO NUMBER(4,0), 
	DESCRIPCION VARCHAR2(60 BYTE), 
	NIVEL VARCHAR2(30 BYTE), 
	TURNO CHAR(1 BYTE)
   );
   /
CREATE TYPE TIP_ASIGNATURAS AS OBJECT
   (	COD_ASIG NUMBER(4,0), 
	NOMBRE VARCHAR2(80 BYTE), 
	TIPO CHAR(1 BYTE)
   );
   /

create or replace NONEDITIONABLE TYPE T_NOTAS AS OBJECT (
 DNI VARCHAR2(10 BYTE), 
	COD_ASIG  REF TIP_ASIGNATURAS, 
	NOTAS V_NOTAS
 );
/
create or replace NONEDITIONABLE TYPE TIP_NOTAS AS TABLE OF T_NOTAS;
/

create or replace NONEDITIONABLE TYPE TIP_ALUMNOS AS OBJECT
   (	DNI VARCHAR2(10 BYTE), 
	NOMBRE VARCHAR2(50 BYTE), 
	DIRECCION T_DIRECCION, 
	TELEFONO T_TELEFONO,  
	FECHA_NAC DATE, 
	ID_CURSO REF TIP_CURSOS,
    NOTAS TIP_NOTAS,
   MEMBER FUNCTION OBTENER_NOTAS (CODA NUMBER,EVA NUMBER) RETURN NUMBER
   );
/
   
 create or replace NONEDITIONABLE TYPE BODY TIP_ALUMNOS AS
  MEMBER FUNCTION OBTENER_NOTAS(CODA NUMBER,EVA NUMBER) RETURN NUMBER IS
  NOTAASIG NUMBER;
  ASIG TIP_ASIGNATURAS;
  BEGIN
  IF EVA <1 OR EVA >5 THEN
    RETURN NOTAASIG;
  END IF;
  IF NOTAS IS NOT NULL THEN
    IF NOTAS.COUNT >0 THEN
        FOR I IN 1.. NOTAS.COUNT LOOP
             SELECT DEREF(NOTAS(I).COD_ASIG) INTO ASIG FROM DUAL;
             IF ASIG.COD_ASIG = CODA THEN 
              NOTAASIG :=NOTAS(I).NOTAS(EVA);
             END IF;
        END LOOP;
    END IF;
  END IF;
    RETURN NOTAASIG;
  END;
END;
/

----------CREAR TABLAS DE LOS TIPOS--------------------------------
--
--SE CREARAN 3 EN VEZ DE 4 COMO DICTA EL ENUNCIADO DEBIDO A QUE LAS NOTAS SE CONVIERTEN EN LA TABLA ANIDADA DE ALUMNOS
--
create table TABLA_ASIGANTURAS OF TIP_ASIGNATURAS(
COD_ASIG PRIMARY KEY
);
/
CREATE TABLE TABLA_CURSOS OF TIP_CURSOS(
ID_CURSO PRIMARY KEY
);
/
CREATE TABLE TABLA_ALUMNOS OF TIP_ALUMNOS(
DNI PRIMARY KEY
)NESTED TABLE NOTAS STORE AS TABLA_NOTAS;
/

----------LLENAR LAS TABLAS CREADAS CON LOS TIPOS-----------------
--
--SE LLENARA LAS DOS PRIMERAS TABLAS CON UN SELECT DE LAS ANTIGUAS YA QUE NO CAMBIA NADA
--MIENTRAS QUE LA DE ALUMNOS SE LLENARA CON UN BLOQUE PL/SQL DEBIDO A QUE ES LA FORMA MAS RAPIDA Y SENCILLA DE LLENARLA
--

insert into TABLA_CURSOS SELECT * FROM TCURSOS;
insert into TABLA_ASIGNATURAS SELECT * FROM tasignaturas;

CREATE OR REPLACE PROCEDURE LLENAR_ALUMNOS IS
CURSOR C1 IS SELECT DNI,ID_CURSO FROM TALUMNOS;

BEGIN
FOR I IN C1 LOOP
    INSERT INTO TABLA_ALUMNOS SELECT DNI,NOMBRE,
    T_DIRECCION(DIRECCION,POBLACION,CODPOSTAL),T_TELEFONO(TELEFONO1,TELEFONO2),FECHA_NAC,REF(C),TIP_NOTAS() 
    FROM TALUMNOS,TABLA_CURSOS C WHERE C.ID_CURSO = I.ID_CURSO AND DNI = I.DNI;
    END LOOP;
END;
/

BEGIN
LLENAR_ALUMNOS;
END;
/

CREATE OR REPLACE PROCEDURE LLENAR_NOTAS IS
CURSOR C1 IS SELECT DNI FROM TABLA_ALUMNOS;
BEGIN
    FOR I IN C1 LOOP
            INSERT INTO TABLE (SELECT A.NOTAS FROM TABLA_ALUMNOS A WHERE A.DNI = I.DNI)
            (SELECT DNI,REF(ASIG),V_NOTAS(NOTA1EV,NOTA2EV,NOTA3EV,NOTAFJUN,NOTASEPT) FROM TNOTAS,TABLA_ASIGNATURAS ASIG WHERE TNOTAS.COD_ASIG = ASIG.COD_ASIG AND TNOTAS.DNI = I.DNI);
    END LOOP;
END;
/

BEGIN
LLENAR_NOTAS;
END;
/