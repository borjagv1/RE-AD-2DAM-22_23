PL/SQL http://www.mundoracle.com/generalidades-pl-sql.html?Pg=sql_plsql_12.htm

PL/SQL http://www.juntadeandalucia.es/servicios/madeja/contenido/recurso/107

MYSQL: https://manuales.guebs.com/mysql-5.0/stored-procedures.html

Procedimiento en ORACLE:
CREATE OR REPLACE PROCEDURE subida_sal(d NUMBER, subida NUMBER) AS
BEGIN
   UPDATE empleados SET salario = salario + subida WHERE dept_no = d;
   COMMIT;
END;
/

Procedimiento en MySQL:
DELIMITER //
CREATE OR REPLACE PROCEDURE subida_sal(d INT, subida INT)
BEGIN
	UPDATE empleados SET salario = salario + subida WHERE dept_no = d;
	COMMIT;
END;
//

call subida_sal(20, 100);

Función en ORACLE:
CREATE OR REPLACE FUNCTION nombre_dep 
               (d NUMBER, locali OUT VARCHAR2)  RETURN VARCHAR2 AS
     nom VARCHAR2(15);
 BEGIN
     SELECT dnombre, loc INTO nom, locali FROM departamentos 
     WHERE dept_no = d;
     RETURN nom;
 EXCEPTION
     WHEN NO_DATA_FOUND THEN 
        nom := 'INEXISTENTE';
        RETURN nom;
 END;
/
--uso
DECLARE
      NOMBRE VARCHAR2(15); 
      LOCALIDAD VARCHAR2(15);
BEGIN
      NOMBRE := nombre_dep(20, LOCALIDAD);
      dbms_output.put_line('LOCALIDAD ' || LOCALIDAD || ' ** NOMBRE DEP: ' ||NOMBRE);
END;
/

Control de errores en ORACLE secci�n de excepciones, acceso a las variables de error SQLCODE y SQLERRM:
. . . . . 
EXCEPTION
   . . . . . .   
    WHEN OTHERS THEN
              SQLCODE => devuelve c�digo de error
              SQLERRM => devuelme mensaje de error;
END;
/
WHEN OTHERS THEN
        RETURN SQLCODE ||'*'||SQLERRM;



DELIMITER //
 CREATE FUNCTION nombre_dep(d int) RETURNS VARCHAR(15) 
 BEGIN
   DECLARE nom VARCHAR(15);
   SET nom = 'INEXISTENTE';  
   SELECT dnombre INTO nom FROM departamentos 
   WHERE dept_no=d;
   RETURN nom;
 END;
//

SELECT nombre_dep(10);

DELIMITER //
 CREATE PROCEDURE datos_dep
           (d int, OUT nom VARCHAR(15), OUT locali VARCHAR(15)) 
 BEGIN
   SET locali = 'INEXISTENTE';  
   SET nom = 'INEXISTENTE';  
   SELECT dnombre, loc INTO nom, locali FROM departamentos 
   WHERE dept_no=d;
 END;
//

call datos_dep(10, @nom, @locali);
SELECT @nom;
SELECT @locali;

------------------------------------------------------------------------------------------------------

DELIMITER //
 CREATE PROCEDURE sumaTotales
           (codCiudad int, codCliente int, OUT totalPlazas NUMBER, OUT importeTotal NUMBER) 
 BEGIN
   SET totalPlazas = 0;  
   SET importeTotal = 0;  
   SELECT dnombre, loc INTO nom, locali FROM departamentos 
   WHERE dept_no=d;
 END;
//

------------------------------------------------------------------------------------------------------

PROCEDIMIENTOS Y FUNCIONES

Ejemplo de funci�n en Oracle:
CREATE OR REPLACE FUNCTION SUMAR (N1 NUMBER, N2 NUMBER)
RETURN NUMBER AS
BEGIN
      RETURN N1 + N2;
END SUMAR;
/
Para probarla  escribimos: SELECT SUMAR(2,22) FROM DUAL;
 
  
Ejemplo de funci�n en MySQL:
DELIMITER //
CREATE FUNCTION SUMAR (N1 INT, N2 INT)  RETURNS INT
BEGIN
  RETURN N1 + N2;
END;
//
 
Para probarla escribimos: SELECT SUMAR(2,22)
Ejemplo en Oracle:
CREATE OR REPLACE PROCEDURE SUBIDA AS
BEGIN
   UPDATE EMPLEADOS SET SALARIO = SALARIO +100 WHERE DEPT_NO=30;
   COMMIT;
END SUBIDA;
 
Ejemplo en MySQL:
DELIMITER //
CREATE PROCEDURE SUBIDA()         
BEGIN
   UPDATE EMPLEADOS SET SALARIO = SALARIO + 100 WHERE DEPT_NO=30;
   COMMIT;
END;
//

